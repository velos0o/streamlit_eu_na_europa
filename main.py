import streamlit as st

# Configura√ß√£o geral da p√°gina com temas avan√ßados (novo na 1.44)
st.set_page_config(
    page_title="Dashboard CRM Bitrix24",
    page_icon="assets/LOGO-EU.NA.EUROPA-MAIO.24-COLORIDO-VERTICAL.svg",
    layout="wide",
    initial_sidebar_state="expanded" if "pagina_atual" not in st.session_state or st.session_state.get("pagina_atual") != "Apresenta√ß√£o Conclus√µes" else "collapsed"
)

import os
import sys
from pathlib import Path

# Configura√ß√£o do ambiente
path_root = Path(__file__).parents[0]
sys.path.append(str(path_root))

# Importa√ß√µes das p√°ginas - usando a pasta views
from views.inicio import show_inicio
from views.producao import show_producao
from views.conclusoes import show_conclusoes
from views.cartorio.cartorio_main import show_cartorio
from views.extracoes.extracoes_main import show_extracoes
# Importar nova p√°gina de apresenta√ß√£o de conclus√µes
from views.apresentacao import show_apresentacao
# Importar nova p√°gina de COMUNE
from views.comune.comune_main import show_comune
# Importar nova p√°gina de Tickets
from views.tickets import show_tickets
# Importar nova p√°gina de Reclama√ß√µes
from views.reclamacoes import show_reclamacoes

# Importar os novos componentes do guia de relat√≥rio
from components.report_guide import show_guide_sidebar, show_page_guide, show_contextual_help
from components.search_component import show_search_box
from components.table_of_contents import render_toc
# Importar o componente de bot√£o de atualiza√ß√£o
from components.refresh_button import render_refresh_button, render_sidebar_refresh_button

# Carregando CSS ainda necess√°rio
with open('assets/styles.css') as f:
    st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

# CSS adicional para o bot√£o de atualiza√ß√£o gigante
st.markdown("""
<style>
/* CSS espec√≠fico para o bot√£o de atualiza√ß√£o na barra lateral usando ID */
div.stButton > button#btn_sidebar_refresh_all {
    height: 120px !important;
    font-size: 24px !important;
    font-weight: 900 !important;
    letter-spacing: 1px !important;
    border-radius: 12px !important;
    margin: 15px 0 !important;
    padding: 10px !important;
    background-color: #FF5722 !important;
    color: white !important;
    border: none !important;
    box-shadow: 0 6px 12px rgba(0,0,0,0.2) !important;
    transition: all 0.3s ease !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
}

div.stButton > button#btn_sidebar_refresh_all:hover {
    background-color: #E64A19 !important;
    transform: translateY(-2px) !important;
    box-shadow: 0 8px 15px rgba(0,0,0,0.3) !important;
}

/* Adicionar anima√ß√£o pulsante para chamar mais aten√ß√£o */
@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.03); }
    100% { transform: scale(1); }
}

div.stButton > button#btn_sidebar_refresh_all {
    animation: pulse 2s infinite;
}
</style>
""", unsafe_allow_html=True)

# Adicionar CSS para centralizar imagens no sidebar
st.markdown("""
<style>
    [data-testid="stSidebar"] [data-testid="stImage"] {
        text-align: center;
        display: block;
        margin-left: auto;
        margin-right: auto;
        width: 80%;
    }
    
    /* Melhor centraliza√ß√£o da logo */
    [data-testid="stSidebar"] [data-testid="stImage"] > img {
        margin: 0 auto;
        display: block;
        max-width: 100%;
    }
    
    /* Container da imagem centralizado */
    [data-testid="stSidebar"] [data-testid="stImage"] > div {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    
    /* Espa√ßamento extra acima e abaixo da logo */
    [data-testid="stSidebar"] [data-testid="stImage"] {
        padding: 10px 0;
    }
</style>
""", unsafe_allow_html=True)

# Adicionar logo no sidebar (m√©todo tradicional)
st.sidebar.image("assets/LOGO-EU.NA.EUROPA-MAIO.24-COLORIDO-VERTICAL.svg", width=500)

# Menu de navega√ß√£o simplificado
st.sidebar.title("Dashboard CRM Bitrix24")

# Adicionar o bot√£o grande de atualiza√ß√£o na barra lateral
render_sidebar_refresh_button()

st.sidebar.markdown("---")

# Adicionar barra de pesquisa no topo do sidebar
show_search_box()
st.sidebar.markdown("---")

# Criar uma se√ß√£o para os bot√µes de navega√ß√£o
st.sidebar.subheader("Navega√ß√£o")

# Vari√°vel de estado para controlar a navega√ß√£o
if 'pagina_atual' not in st.session_state:
    st.session_state['pagina_atual'] = 'Macro Higieniza√ß√£o'

# Fun√ß√µes simples para alterar a p√°gina
def ir_para_inicio(): st.session_state['pagina_atual'] = 'Macro Higieniza√ß√£o'
def ir_para_producao(): st.session_state['pagina_atual'] = 'Produ√ß√£o Higieniza√ß√£o'
def ir_para_conclusoes(): st.session_state['pagina_atual'] = 'Conclus√µes Higieniza√ß√£o'
def ir_para_cartorio(): st.session_state['pagina_atual'] = 'Cart√≥rio'
def ir_para_comune(): st.session_state['pagina_atual'] = 'Comune'
def ir_para_extracoes(): st.session_state['pagina_atual'] = 'Extra√ß√µes de Dados'
def ir_para_apresentacao(): st.session_state['pagina_atual'] = 'Apresenta√ß√£o Conclus√µes'
def ir_para_tickets(): st.session_state['pagina_atual'] = 'Tickets'
def ir_para_reclamacoes(): st.session_state['pagina_atual'] = 'Reclama√ß√µes'

# Bot√µes individuais para navega√ß√£o (usando m√©todo tradicional)
st.sidebar.button("Macro Higieniza√ß√£o", key="btn_inicio", 
            on_click=ir_para_inicio,
            use_container_width=True,
            type="primary" if st.session_state['pagina_atual'] == "Macro Higieniza√ß√£o" else "secondary")

st.sidebar.button("Produ√ß√£o Higieniza√ß√£o", key="btn_producao", 
            on_click=ir_para_producao,
            use_container_width=True,
            type="primary" if st.session_state['pagina_atual'] == "Produ√ß√£o Higieniza√ß√£o" else "secondary",
            help="Visualiza√ß√£o de produ√ß√£o de processos")

st.sidebar.button("Conclus√µes Higieniza√ß√£o", key="btn_conclusoes", 
            on_click=ir_para_conclusoes,
            use_container_width=True,
            type="primary" if st.session_state['pagina_atual'] == "Conclus√µes Higieniza√ß√£o" else "secondary")

st.sidebar.button("Funil Emiss√µes Bitrix", key="btn_cartorio", 
            on_click=ir_para_cartorio,
            use_container_width=True,
            type="primary" if st.session_state['pagina_atual'] == "Cart√≥rio" else "secondary")

st.sidebar.button("Comune Bitrix24", key="btn_comune", 
            on_click=ir_para_comune,
            use_container_width=True,
            type="primary" if st.session_state['pagina_atual'] == "Comune" else "secondary")

st.sidebar.button("Extra√ß√µes", key="btn_extracoes", 
            on_click=ir_para_extracoes,
            use_container_width=True,
            type="primary" if st.session_state['pagina_atual'] == "Extra√ß√µes de Dados" else "secondary")

st.sidebar.button("Tickets de Suporte", key="btn_tickets", 
            on_click=ir_para_tickets,
            use_container_width=True,
            type="primary" if st.session_state['pagina_atual'] == "Tickets" else "secondary")

st.sidebar.button("Reclama√ß√µes", key="btn_reclamacoes", 
            on_click=ir_para_reclamacoes,
            use_container_width=True,
            type="primary" if st.session_state['pagina_atual'] == "Reclama√ß√µes" else "secondary")

# Adicionar separador para se√ß√£o de apresenta√ß√£o
st.sidebar.markdown("---")
st.sidebar.subheader("Modo Apresenta√ß√£o")

# Bot√£o destacado para o modo de apresenta√ß√£o
st.sidebar.button("üì∫ Apresenta√ß√£o em TV (9:16)", key="btn_apresentacao", 
            on_click=ir_para_apresentacao,
            use_container_width=True,
            type="primary" if st.session_state['pagina_atual'] == "Apresenta√ß√£o Conclus√µes" else "secondary")

# Adicionar o guia de relat√≥rio na barra lateral
show_guide_sidebar()

# Exibi√ß√£o da p√°gina selecionada com base na vari√°vel de sess√£o
pagina = st.session_state['pagina_atual']

try:
    # Adicionar guia de p√°gina contextual para cada p√°gina
    if pagina != "Apresenta√ß√£o Conclus√µes":  # N√£o mostrar na apresenta√ß√£o
        show_page_guide(pagina)
    
    if pagina == "Macro Higieniza√ß√£o":
        # Definir as se√ß√µes para o sum√°rio da p√°gina
        sections = [
            {"label": "M√©tricas Gerais", "anchor": "metricas_gerais", "icon": "üìä"},
            {"label": "√öltimas Conclus√µes", "anchor": "ultimas_conclusoes", "icon": "‚úÖ"}
        ]
        render_toc(sections, "Navega√ß√£o R√°pida", horizontal=True)
        show_inicio()
        
    elif pagina == "Produ√ß√£o Higieniza√ß√£o":
        # Definir as se√ß√µes para o sum√°rio da p√°gina
        sections = [
            {"label": "M√©tricas de Produ√ß√£o", "anchor": "metricas_producao", "icon": "üìä"},
            {"label": "Produ√ß√£o por Respons√°vel", "anchor": "producao_responsavel", "icon": "üë§"},
            {"label": "Tend√™ncias Temporais", "anchor": "tendencias_temporais", "icon": "üìà"},
            {"label": "Pend√™ncias", "anchor": "pendencias", "icon": "‚ö†Ô∏è"}
        ]
        render_toc(sections, "Navega√ß√£o R√°pida", horizontal=True)
        show_producao()
        
    elif pagina == "Conclus√µes Higieniza√ß√£o":
        # Definir as se√ß√µes para o sum√°rio da p√°gina
        sections = [
            {"label": "M√©tricas de Conclus√£o", "anchor": "metricas_conclusao", "icon": "üìä"},
            {"label": "An√°lise de Qualidade", "anchor": "analise_qualidade", "icon": "üîç"},
            {"label": "Tend√™ncias de Conclus√£o", "anchor": "tendencias_conclusao", "icon": "üìà"}
        ]
        render_toc(sections, "Navega√ß√£o R√°pida", horizontal=True)
        show_conclusoes()
        
    elif pagina == "Cart√≥rio":
        # Definir as se√ß√µes para o sum√°rio da p√°gina
        sections = [
            {"label": "Vis√£o do Funil", "anchor": "visao_funil", "icon": "üìã"},
            {"label": "Convers√£o Entre Etapas", "anchor": "conversao_etapas", "icon": "üîÑ"},
            {"label": "Previs√£o de Conclus√µes", "anchor": "previsao_conclusoes", "icon": "üîÆ"}
        ]
        render_toc(sections, "Navega√ß√£o R√°pida", horizontal=True)
        show_cartorio()
        
    elif pagina == "Comune":
        # Definir as se√ß√µes para o sum√°rio da p√°gina
        sections = [
            {"label": "An√°lise de Comunidades", "anchor": "analise_comunidades", "icon": "üë•"},
            {"label": "Intera√ß√µes", "anchor": "interacoes", "icon": "üîÑ"},
            {"label": "M√©tricas de Engajamento", "anchor": "metricas_engajamento", "icon": "üìä"}
        ]
        render_toc(sections, "Navega√ß√£o R√°pida", horizontal=True)
        show_comune()
        
    elif pagina == "Extra√ß√µes de Dados":
        # Definir as se√ß√µes para o sum√°rio da p√°gina
        sections = [
            {"label": "Extra√ß√£o Personalizada", "anchor": "extracao_personalizada", "icon": "üîç"},
            {"label": "Relat√≥rios Prontos", "anchor": "relatorios_prontos", "icon": "üìã"},
            {"label": "Exporta√ß√£o", "anchor": "exportacao", "icon": "üì§"}
        ]
        render_toc(sections, "Navega√ß√£o R√°pida", horizontal=True)
        show_extracoes()
        
    elif pagina == "Tickets":
        # Definir as se√ß√µes para o sum√°rio da p√°gina
        sections = [
            {"label": "Vis√£o Geral", "anchor": "visao_geral", "icon": "üìä"},
            {"label": "Por Tempo", "anchor": "por_tempo", "icon": "üïí"},
            {"label": "Detalhes", "anchor": "detalhes", "icon": "üîç"}
        ]
        render_toc(sections, "Navega√ß√£o R√°pida", horizontal=True)
        show_tickets()
        
    elif pagina == "Reclama√ß√µes":
        # Definir as se√ß√µes para o sum√°rio da p√°gina
        sections = [
            {"label": "Vis√£o Geral", "anchor": "visao_geral", "icon": "üìä"},
            {"label": "Tend√™ncia", "anchor": "tendencia", "icon": "üìà"},
            {"label": "Detalhes", "anchor": "detalhes", "icon": "üîç"}
        ]
        render_toc(sections, "Navega√ß√£o R√°pida", horizontal=True)
        show_reclamacoes()
        
    elif pagina == "Apresenta√ß√£o Conclus√µes":
        # Verificar se h√° par√¢metro 'slide' na URL
        slide_inicial = 0
        try:
            if 'slide' in st.query_params:
                slide_inicial = int(st.query_params['slide'])
                print(f"Iniciando apresenta√ß√£o a partir do slide: {slide_inicial}")
        except Exception as e:
            print(f"Erro ao processar par√¢metro de slide: {str(e)}")
            
        # Chamar a fun√ß√£o com o par√¢metro de slide inicial
        show_apresentacao(slide_inicial=slide_inicial)
except Exception as e:
    st.error(f"Erro ao carregar a p√°gina: {str(e)}")
    # Mostrar detalhes do erro para facilitar a depura√ß√£o
    st.exception(e)

# Rodap√© do sidebar
st.sidebar.markdown("---")
st.sidebar.markdown("Dashboard desenvolvido para an√°lise de dados do CRM Bitrix24") 
